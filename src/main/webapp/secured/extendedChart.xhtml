<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
>

<h:body>

    <ui:composition template="/template/common/commonLayout.xhtml">
        <ui:define name="content">



            <h:form  id="form">

                <p:commandButton value="Generar" action="#{chartController.cargarData}"
                                 icon="ui-icon ui-icon-disk" id="withIcon" styleClass="boton"
                                 oncomplete="renderChart('container','area','Sample Chart', '#{chartController.chartData}', '#{chartController.categories}');"
                                    update="@this"
                />
                <h:inputHidden id="hidden" value="#{chartController.chartData}"/>

                <div id="container" style="width: 100%; height: 500px"></div>
            </h:form>

            <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
            <script src="http://code.highcharts.com/highcharts.js" type="text/javascript"></script>
            <script src="http://code.highcharts.com/modules/exporting.js" type="text/javascript"></script>
            <script type="text/javascript">
                function renderChart(divId, chartType, chartTitle, chartData, categories){
                    var options = createOption(divId, chartType, chartTitle, categories);
                    console.log("impresion");
                    console.log(chartData);
                    console.log(document.getElementById("form:hidden").value);
                    var x = document.getElementById("form:hidden").value;
                    options.series = $.parseJSON(chartData);
                    var chart = new Highcharts.Chart(options);
                }

                function createOption(divId, chartType, chartTitle, categories){
                    var options = {
                        colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#FFF263', '#6AF9C4'],
                        chart: {
                            backgroundColor: {
                                linearGradient: [0, 0, 500, 500],
                                stops: [
                                    [0, 'rgb(255, 255, 255)'],
                                    [1, 'rgb(240, 240, 255)']
                                ]
                            },
                            borderWidth: 2,
                            plotBackgroundColor: 'rgba(255, 255, 255, .9)',
                            plotShadow: true,
                            plotBorderWidth: 1,
                            renderTo: divId,
                            type: chartType
                        },
                        title: {
                            text: 'JVM Heap Memory Usage Chart',
                            style: {
                                color: '#000',
                                font: 'bold 16px "Trebuchet MS", Verdana, sans-serif'
                            }
                        },
                        subtitle: {
                            text: 'Source: http://java-bytes.blogspot.com',
                            style: {
                                color: '#666666',
                                font: 'bold 12px "Trebuchet MS", Verdana, sans-serif'
                            }
                        },
                        xAxis: {
                            ridLineWidth: 1,
                            lineColor: '#000',
                            tickColor: '#000',
                            categories: $.parseJSON(categories),
                            labels: {
                                style: {
                                    color: '#000',
                                    font: '11px Trebuchet MS, Verdana, sans-serif'
                                },
                                formatter: function() {
                                    return this.value;
                                }
                            },
                            title: {
                                style: {
                                    color: '#333',
                                    fontWeight: 'bold',
                                    fontSize: '12px',
                                    fontFamily: 'Trebuchet MS, Verdana, sans-serif'

                                }
                            }
                        },
                        yAxis: {
                            minorTickInterval: 'auto',
                            lineColor: '#000',
                            lineWidth: 1,
                            tickWidth: 1,
                            tickColor: '#000',
                            title: {
                                style: {
                                    color: '#333',
                                    fontWeight: 'bold',
                                    fontSize: '12px',
                                    fontFamily: 'Trebuchet MS, Verdana, sans-serif'
                                },
                                text: 'Heap Memory Usage'
                            },
                            labels: {
                                formatter: function() {
                                    return this.value +'MB';
                                },
                                style: {
                                    color: '#000',
                                    font: '11px Trebuchet MS, Verdana, sans-serif'
                                }
                            }
                        },
                        plotOptions: {
                            area: {
                                stacking: 'normal',
                                lineColor: '#666666',
                                lineWidth: 1,
                                marker: {
                                    lineWidth: 1,
                                    lineColor: '#666666'
                                }
                            }
                        },
                        tooltip: {
                            formatter: function() {
                                return ''+ this.x +': '+ Highcharts.numberFormat(this.y, 0, ',') +' MB';
                            }
                        },
                        legend: {
                            itemStyle: {
                                font: '9pt Trebuchet MS, Verdana, sans-serif',
                                color: 'black'

                            },
                            itemHoverStyle: {
                                color: '#039'
                            },
                            itemHiddenStyle: {
                                color: 'gray'
                            }
                        },
                        labels: {
                            style: {
                                color: '#99b'
                            }
                        },
                        series: [ ]
                    };

                    return options;
                };
            </script>


        </ui:define>


    </ui:composition>

</h:body>

</html>
